#Reainbow physics Revision 1 - primary and secondary rainbow angles
#Angular deviations in radians 
#imtegrate 1b 

import numpy as np
import plotly.graph_objs as go
from plotly.subplots import make_subplots

# Constants
n_water = 1.333  # refractive index of water

# Function to compute deviation angle
def deviation_angle(theta_i_deg, num_reflections):
    theta_i = np.radians(theta_i_deg)
    theta_r = np.arcsin(np.sin(theta_i) / n_water)
    
    if num_reflections == 1:  # Primary rainbow
        delta = 2 * theta_i - 4 * theta_r + np.pi
    elif num_reflections == 2:  # Secondary rainbow
        delta = 2 * theta_i - 6 * theta_r + 2 * np.pi
    else:
        raise ValueError("Only 1 or 2 reflections supported")
    
    return np.degrees(delta)

# Range of incidence angles (in degrees)
theta_i_range = np.linspace(0.001, 90, 1000)  # avoid division by zero

# Compute elevation angles
elevation_primary = 180 - deviation_angle(theta_i_range, 1)
elevation_secondary = 180 - deviation_angle(theta_i_range, 2)

# Make plot
fig = make_subplots(rows=1, cols=1, subplot_titles=["Elevation Angle vs Incident Angle"])

fig.add_trace(go.Scatter(x=theta_i_range, y=elevation_primary, name="Primary Rainbow", line=dict(color='blue')), row=1, col=1)
fig.add_trace(go.Scatter(x=theta_i_range, y=elevation_secondary, name="Secondary Rainbow", line=dict(color='red')), row=1, col=1)

fig.update_layout(
    title="Descartes' Model of Rainbow Elevation",
    xaxis_title="Incident Angle (°)",
    yaxis_title="Elevation Angle (°)",
    template="plotly_white",
    legend=dict(x=0.7, y=0.9)
)

fig.show()
from ipywidgets import interact, FloatSlider

def interactive_rainbow(n_water=1.333):
    def deviation(theta_i_deg, k):
        theta_i = np.radians(theta_i_deg)
        theta_r = np.arcsin(np.sin(theta_i) / n_water)
        return np.degrees(2 * theta_i - 2*(2 + k)*theta_r + k*np.pi)

    theta = np.linspace(0.001, 90, 1000)
    elev_primary = 180 - deviation(theta, 1)
    elev_secondary = 180 - deviation(theta, 2)

    import matplotlib.pyplot as plt
    plt.figure(figsize=(10,5))
    plt.plot(theta, elev_primary, label="Primary Rainbow", color='blue')
    plt.plot(theta, elev_secondary, label="Secondary Rainbow", color='red')
    plt.xlabel("Incident Angle (°)")
    plt.ylabel("Elevation (°)")
    plt.title(f"Rainbow Elevation for n={n_water}")
    plt.legend()
    plt.grid(True)
    plt.show()

interact(interactive_rainbow, n_water=FloatSlider(min=1.31, max=1.34, step=0.001, value=1.333));

min_idx_primary = np.argmin(deviation_angle(theta_i_range, 1))
rainbow_angle_primary = 180 - deviation_angle(theta_i_range[min_idx_primary], 1)

min_idx_secondary = np.argmin(deviation_angle(theta_i_range, 2))
rainbow_angle_secondary = 180 - deviation_angle(theta_i_range[min_idx_secondary], 2)

print(f"Primary rainbow angle: {rainbow_angle_primary:.2f}°")
print(f"Secondary rainbow angle: {rainbow_angle_secondary:.2f}°")
